#!/bin/bash
# Based on: https://stackoverflow.com/questions/3216360/merge-update-and-pull-git-branches-without-using-checkouts/17722977#17722977

# Set the target branch here
TARGET_BRANCH="dev"

show_help() {
  echo "usage: git ${TARGET_BRANCH} [-h]"
  echo ""
  echo "  Update ${TARGET_BRANCH} branch and then switch to it."
  echo "  This way I shouldn't need to pull after switching branches."
  echo "  This shouldn't trigger a hot-reload if I am running something in hot-reload mode and are switching back to ${TARGET_BRANCH} after merging in a feature branch."
}

if [[ "$1" == "-h" ]]; then
  show_help
  exit 0
fi

# Get the current branch name
current_branch=$(git rev-parse --abbrev-ref HEAD)

# Check if we are on the target branch
if [[ "$current_branch" == "$TARGET_BRANCH" ]]; then
  echo "Already on ${TARGET_BRANCH} branch. Pulling latest changes..."
  git pull
else
  # If not on target branch, update it without checking out first
  git fetch origin ${TARGET_BRANCH}:${TARGET_BRANCH}
  git checkout ${TARGET_BRANCH}
fi
